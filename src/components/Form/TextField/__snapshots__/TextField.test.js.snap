// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TextField /> rendered correctly with Default fixture 1`] = `
<TextField
  disabled={false}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
>
  <div
    className="outer"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with Disabled fixture 1`] = `
<TextField
  disabled={true}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
>
  <div
    className="outer disabled"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={true}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with Error fixture 1`] = `
<TextField
  disabled={false}
  error="Something isn't right"
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
>
  <div
    className="outer"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
    <label
      className="description"
      htmlFor="demo"
    >
      Something isn't right
    </label>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with InvalidMarker fixture 1`] = `
<TextField
  disabled={false}
  error="Something isn't right"
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={true}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value="Bruce"
>
  <div
    className="outer hasMarker"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value="Bruce"
      />
      <Tick
        className="marker"
        fill="currentColor"
        height={32}
        width={32}
      >
        <svg
          className="marker"
          fill="currentColor"
          height={32}
          viewBox="0 0 24 24"
          width={32}
        >
          <path
            d="M17.207 7.707a1 1 0 0 1 1.415 1.414l-7.998 8.003a1 1 0 0 1-1.414 0l-4.003-4.003a1 1 0 1 1 1.414-1.414l3.296 3.296 7.29-7.296z"
          />
        </svg>
      </Tick>
      <label
        className="label floating"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
    <label
      className="description"
      htmlFor="demo"
    >
      Something isn't right
    </label>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with ValidMarker fixture 1`] = `
<TextField
  disabled={false}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={true}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value="Bruce"
>
  <div
    className="outer hasMarker"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value="Bruce"
      />
      <Tick
        className="marker"
        fill="currentColor"
        height={32}
        width={32}
      >
        <svg
          className="marker"
          fill="currentColor"
          height={32}
          viewBox="0 0 24 24"
          width={32}
        >
          <path
            d="M17.207 7.707a1 1 0 0 1 1.415 1.414l-7.998 8.003a1 1 0 0 1-1.414 0l-4.003-4.003a1 1 0 1 1 1.414-1.414l3.296 3.296 7.29-7.296z"
          />
        </svg>
      </Tick>
      <label
        className="label floating"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with Value fixture 1`] = `
<TextField
  disabled={false}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value="Oscar"
>
  <div
    className="outer"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value="Oscar"
      />
      <label
        className="label floating"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with noLabel fixture 1`] = `
<TextField
  disabled={false}
  id="demo"
  inline={false}
  isValid={true}
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
>
  <div
    className="outer"
  >
    <div
      className="block"
    >
      <input
        className="input noLabel"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with password fixture 1`] = `
<TextField
  disabled={false}
  id="demo"
  inline={false}
  isValid={true}
  label="Password"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  password={true}
  value=""
>
  <div
    className="outer"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="password"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        Password
      </label>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with small fixture 1`] = `
<TextField
  disabled={false}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  small={true}
  value=""
>
  <div
    className="outer small"
  >
    <div
      className="block"
    >
      <input
        className="input small"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label small"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with smallNoLabel fixture 1`] = `
<TextField
  disabled={false}
  id="demo"
  inline={false}
  isValid={true}
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  small={true}
  value=""
>
  <div
    className="outer small"
  >
    <div
      className="block"
    >
      <input
        className="input small noLabel"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
    </div>
  </div>
</TextField>
`;
